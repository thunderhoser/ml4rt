#!/bin/tcsh

#SBATCH --job-name="train_neural_nets"
#SBATCH --partition="fge"
#SBATCH --account="rda-ghpcs"
#SBATCH --qos="batch"
#SBATCH --nodes=1
#SBATCH --ntasks=8           # 8 tasks per node
#SBATCH --cpus-per-task=2
#SBATCH --ntasks-per-node=8  # 8 GPUs per node
#SBATCH --exclusive
#SBATCH --time=30:00:00
#SBATCH --array=1-16
#SBATCH --exclude=h28n12
##SBATCH --exclude=h31n03,h28n12
##SBATCH --exclude=h29n01,h26n05,h28n06,h29n07,h30n03,h30n15
#SBATCH --mail-type=BEGIN,END,FAIL
#SBATCH --mail-user=ryan.lagerquist@noaa.gov
#SBATCH --output=train_neural_nets_%A_%a.out

module load cuda/10.1
source /scratch2/BMC/gsd-hpcs/Jebb.Q.Stewart/conda3.7/etc/profile.d/conda.csh
conda activate base

set CODE_DIR_NAME="/scratch1/RDARCH/rda-ghpcs/Ryan.Lagerquist/ml4rt_standalone_sr/ml4rt"
set TEMPLATE_DIR_NAME="/scratch1/RDARCH/rda-ghpcs/Ryan.Lagerquist/ml4rt_models/gfs_experiment_all_aerosol_preds/templates"
set TOP_OUTPUT_DIR_NAME="/scratch1/RDARCH/rda-ghpcs/Ryan.Lagerquist/ml4rt_models/gfs_experiment_all_aerosol_preds"

set NORMALIZATION_FILE_NAME="/scratch1/RDARCH/rda-ghpcs/Ryan.Lagerquist/ml4rt_project/gfs_data/examples_new/orig_heights/training/learning_examples_for_norm_20200103-20200313.nc"

set USE_GENERATOR_FLAGS=(0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1)
set EXAMPLES_PER_BATCH_COUNTS=(181 362 724 362 181 362 724 362 181 362 724 362 181 362 724 362)
set BATCHES_PER_EPOCH_COUNTS=(3000 750 5000 500 3000 750 5000 500 3000 750 5000 500 3000 750 5000 500)
set MULTIPLY_PREDICTORS_FLAGS=(0 0 0 0 1 1 1 1 1 1 1 1 0 0 0 0)
set MULTIPLY_HEATING_RATE_FLAGS=(1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0)

set use_generator_flag=${USE_GENERATOR_FLAGS[$SLURM_ARRAY_TASK_ID]}
set num_examples_per_batch=${EXAMPLES_PER_BATCH_COUNTS[$SLURM_ARRAY_TASK_ID]}
set num_batches_per_epoch=${BATCHES_PER_EPOCH_COUNTS[$SLURM_ARRAY_TASK_ID]}
set multiply_predictors_flag=${MULTIPLY_PREDICTORS_FLAGS[$SLURM_ARRAY_TASK_ID]}
set multiply_heating_rate_flag=${MULTIPLY_HEATING_RATE_FLAGS[$SLURM_ARRAY_TASK_ID]}

set use_generator_flag_string=`printf "%1d" $use_generator_flag`
set num_examples_per_batch_string=`printf "%03d" $num_examples_per_batch`
set num_batches_per_epoch_string=`printf "%04d" $num_batches_per_epoch`
set multiply_predictors_flag_string=`printf "%1d" $multiply_predictors_flag`
set multiply_heating_rate_flag_string=`printf "%1d" $multiply_heating_rate_flag`

set template_file_name="${TEMPLATE_DIR_NAME}/model.h5"
set output_dir_name="${TOP_OUTPUT_DIR_NAME}/use-generator=${use_generator_flag_string}_num-examples-per-batch=${num_examples_per_batch_string}_num-batches-per-epoch=${num_batches_per_epoch_string}_multiply-predictors=${multiply_predictors_flag_string}_multiply-heating-rate=${multiply_heating_rate_flag_string}"
echo $output_dir_name

if ($multiply_predictors_flag > 0 && $multiply_heating_rate_flag > 0) then
    set training_dir_name="/scratch1/RDARCH/rda-ghpcs/Ryan.Lagerquist/ml4rt_project/gfs_data/examples_new/orig_heights/normalized_multiply_preds_and_hr/training"
    set validation_dir_name="/scratch1/RDARCH/rda-ghpcs/Ryan.Lagerquist/ml4rt_project/gfs_data/examples_new/orig_heights/normalized_multiply_preds_and_hr/validation"
else if ($multiply_predictors_flag > 0) then
    set training_dir_name="/scratch1/RDARCH/rda-ghpcs/Ryan.Lagerquist/ml4rt_project/gfs_data/examples_new/orig_heights/normalized_multiply_preds/training"
    set validation_dir_name="/scratch1/RDARCH/rda-ghpcs/Ryan.Lagerquist/ml4rt_project/gfs_data/examples_new/orig_heights/normalized_multiply_preds/validation"
else if ($multiply_heating_rate_flag > 0) then
    set training_dir_name="/scratch1/RDARCH/rda-ghpcs/Ryan.Lagerquist/ml4rt_project/gfs_data/examples_new/orig_heights/normalized_multiply_hr/training"
    set validation_dir_name="/scratch1/RDARCH/rda-ghpcs/Ryan.Lagerquist/ml4rt_project/gfs_data/examples_new/orig_heights/normalized_multiply_hr/validation"
else
    set training_dir_name="/scratch1/RDARCH/rda-ghpcs/Ryan.Lagerquist/ml4rt_project/gfs_data/examples_new/orig_heights/normalized/training"
    set validation_dir_name="/scratch1/RDARCH/rda-ghpcs/Ryan.Lagerquist/ml4rt_project/gfs_data/examples_new/orig_heights/normalized/validation"
endif

python3 -u "${CODE_DIR_NAME}/train_neural_net.py" \
--net_type_string="u_net" \
--input_training_dir_name="${training_dir_name}" \
--input_validation_dir_name="${validation_dir_name}" \
--input_normalization_file_name="${NORMALIZATION_FILE_NAME}" \
--input_model_file_name="${template_file_name}" \
--output_model_dir_name="${output_dir_name}" \
--use_generator_for_training=${use_generator_flag_string} \
--use_generator_for_validn=0 \
--predictor_names "zenith_angle_radians" "albedo" "aerosol_single_scattering_albedo" "aerosol_asymmetry_param" "pressure_pascals" "temperature_kelvins" "specific_humidity_kg_kg01" "relative_humidity_unitless" "liquid_water_content_kg_m03" "ice_water_content_kg_m03" "liquid_water_path_kg_m02" "ice_water_path_kg_m02" "vapour_path_kg_m02" "upward_liquid_water_path_kg_m02" "upward_ice_water_path_kg_m02" "upward_vapour_path_kg_m02" "liquid_effective_radius_metres" "ice_effective_radius_metres" "o3_mixing_ratio_kg_kg01" "co2_concentration_ppmv" "ch4_concentration_ppmv" "n2o_concentration_ppmv" "aerosol_extinction_metres01" "height_m_agl" "height_thickness_metres" "pressure_thickness_pascals" \
--target_names "shortwave_heating_rate_k_day01" "shortwave_surface_down_flux_w_m02" "shortwave_toa_up_flux_w_m02" \
--heights_m_agl 21 44 68 93 120 149 179 212 246 282 321 361 405 450 499 550 604 661 722 785 853 924 999 1078 1161 1249 1342 1439 1542 1649 1762 1881 2005 2136 2272 2415 2564 2720 2882 3051 3228 3411 3601 3798 4002 4214 4433 4659 4892 5132 5379 5633 5894 6162 6436 6716 7003 7296 7594 7899 8208 8523 8842 9166 9494 9827 10164 10505 10849 11198 11550 11906 12266 12630 12997 13368 13744 14123 14506 14895 15287 15686 16090 16501 16920 17350 17791 18246 18717 19205 19715 20249 20809 21400 22022 22681 23379 24119 24903 25736 26619 27558 28556 29616 30743 31940 33211 34566 36012 37560 39218 40990 42882 44899 47042 49299 51644 54067 56552 59089 61677 64314 67001 69747 72521 75256 77803 \
--multiply_preds_by_layer_thickness=${multiply_predictors_flag_string} \
--multiply_hr_by_layer_thickness=${multiply_heating_rate_flag_string} \
--first_training_time_string="2020-01-03-000000" \
--last_training_time_string="2020-03-13-235959" \
--first_validn_time_string="2020-03-16-000000" \
--last_validn_time_string="2020-04-15-235959" \
--vector_target_norm_type_string="" \
--scalar_target_norm_type_string="minmax" \
--scalar_target_min_norm_value=0 \
--scalar_target_max_norm_value=1 \
--num_examples_per_batch=${num_examples_per_batch_string} \
--num_training_batches_per_epoch=${num_batches_per_epoch_string} \
--num_validn_batches_per_epoch=${num_batches_per_epoch_string} \
--plateau_lr_multiplier=0.6
