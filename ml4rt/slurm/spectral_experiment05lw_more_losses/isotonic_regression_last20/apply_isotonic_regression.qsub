#!/bin/bash

#SBATCH --job-name="apply_isotonic_regression"
#SBATCH --partition="fge"
#SBATCH --account="rda-ghpcs"
#SBATCH --qos="gpuwf"
#SBATCH --ntasks=1
#SBATCH --nodes=1
#SBATCH --cpus-per-task=1
##SBATCH --nodes=1
##SBATCH --ntasks=1
##SBATCH --cpus-per-task=1
##SBATCH --ntasks-per-node=1
#SBATCH --time=02:00:00
#SBATCH --array=20-39
#SBATCH --exclude=h28n12
##SBATCH --exclude=h31n03,h28n12
##SBATCH --exclude=h29n01,h26n05,h28n06,h29n07,h30n03,h30n15
#SBATCH --mail-type=BEGIN,END,FAIL
#SBATCH --mail-user=ryan.lagerquist@noaa.gov
#SBATCH --output=apply_isotonic_regression_%A_%a.out

conda init
conda activate base

echo `which conda`
echo `which python`
echo `which python3`

# PATH=/usr/local/cuda/bin:$PATH
echo $PATH

CODE_DIR_NAME="/scratch1/RDARCH/rda-ghpcs/Ryan.Lagerquist/ml4rt_standalone/ml4rt"
TOP_MODEL_DIR_NAME="/scratch1/RDARCH/rda-ghpcs/Ryan.Lagerquist/ml4rt_models/spectral_experiment05lw_more_losses"

MIN_DUAL_WEIGHTS=("0.10" "0.25" "0.50" "0.75" "1.00" "0.10" "0.25" "0.50" "0.75" "1.00" "0.10" "0.25" "0.50" "0.75" "1.00" "0.10" "0.25" "0.50" "0.75" "1.00" "0.10" "0.25" "0.50" "0.75" "1.00" "0.10" "0.25" "0.50" "0.75" "1.00" "0.10" "0.25" "0.50" "0.75" "1.00" "0.10" "0.25" "0.50" "0.75" "1.00")
BROADBAND_WEIGHTS=("0.01" "0.01" "0.01" "0.01" "0.01" "0.05" "0.05" "0.05" "0.05" "0.05" "0.10" "0.10" "0.10" "0.10" "0.10" "0.20" "0.20" "0.20" "0.20" "0.20" "0.01" "0.01" "0.01" "0.01" "0.01" "0.05" "0.05" "0.05" "0.05" "0.05" "0.10" "0.10" "0.10" "0.10" "0.10" "0.20" "0.20" "0.20" "0.20" "0.20")
NORMALIZATION_TYPE_STRINGS=("old" "old" "old" "old" "old" "old" "old" "old" "old" "old" "old" "old" "old" "old" "old" "old" "old" "old" "old" "old" "new" "new" "new" "new" "new" "new" "new" "new" "new" "new" "new" "new" "new" "new" "new" "new" "new" "new" "new" "new")

min_dual_weight=${MIN_DUAL_WEIGHTS[$SLURM_ARRAY_TASK_ID]}
broadband_weight=${BROADBAND_WEIGHTS[$SLURM_ARRAY_TASK_ID]}
normalization_type_string=${NORMALIZATION_TYPE_STRINGS[$SLURM_ARRAY_TASK_ID]}

model_dir_name="${TOP_MODEL_DIR_NAME}/min-dual-weight=${min_dual_weight}_broadband-weight=${broadband_weight}_normalization-type=${normalization_type_string}"

isotonic_model_dir_name="${model_dir_name}/isotonic_regression"
isotonic_model_file_name="${isotonic_model_dir_name}/isotonic_regression.dill"
orig_prediction_file_name="${model_dir_name}/validation/predictions.nc"
new_prediction_file_name="${isotonic_model_dir_name}/validation/predictions.nc"

python3 -u "${CODE_DIR_NAME}/apply_isotonic_regression.py" \
--input_prediction_file_name="${orig_prediction_file_name}" \
--input_model_file_name="${isotonic_model_file_name}" \
--output_prediction_file_name="${new_prediction_file_name}"
